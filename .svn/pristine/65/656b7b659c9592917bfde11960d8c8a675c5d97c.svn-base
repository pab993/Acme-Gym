
package domain;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Embeddable;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.SafeHtml;
import org.hibernate.validator.constraints.SafeHtml.WhiteListType;

@Embeddable
@Access(AccessType.PROPERTY)
public class Moment {

	//Attributes 
	// =================================================================

	private String	day;
	private String	startTime;
	private String	endTime;
	private int		availableSeats;


	@SafeHtml(whitelistType = WhiteListType.NONE)
	@NotBlank
	public String getDay() {
		return day;
	}
	public void setDay(String day) {
		this.day = day;
	}

	@SafeHtml(whitelistType = WhiteListType.NONE)
	@NotBlank
	@Pattern(regexp = "^[0-2]{1}[0-9]{1}[ : ][0-5]{1}[0-9] {1}$")
	//Hay que comprobar que si se ha establecido un 2 en la primera hora los numeros siguientes permitidos son 0-4
	public String getStartTime() {
		return startTime;
	}
	public void setStartTime(String startTime) {
		this.startTime = startTime;
	}

	@SafeHtml(whitelistType = WhiteListType.NONE)
	@NotBlank
	@Pattern(regexp = "^[0-2]{1}[0-9]{1}[ : ][0-5]{1}[0-9] {1}$")
	public String getEndTime() {
		return endTime;
	}
	public void setEndTime(String endTime) {
		this.endTime = endTime;
	}

	@NotNull
	public int getAvailableSeats() {
		return availableSeats;
	}
	public void setAvailableSeats(int availableSeats) {
		this.availableSeats = availableSeats;
	}

}
